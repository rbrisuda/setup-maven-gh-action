name: "setup-maven"
description: "Setup runner environment (Github or self hosted runners) to be able build maven projects"
inputs:
  java-version:
    description: "Java version"
    required: true
  restore-cache:
    description: "If cache should be restored"
    required: false
    default: "true"

  source-aws-profile:
    description: "AWS profile used to assume role for accessing maven artifacts S3 repositories"
    required: true
  maven-aws-role-to-assume:
    description: "Role to assume for accessing maven artifacts S3 repositories"
    required: true
  maven-artifacts-account-id:
    description: "Account id where maven artifacts S3 repositories exist"
    required: true
  maven-aws-profile-name:
    description: "Profile name for aws profile to be created"
    required: false
    default: "maven-aws-profile"

  maven-s3-wagon-key:
    description: "Maven s3 wagon key in maven release S3 repository"
    required: true

  self-hosted-runner-maven-version:
    description: "Maven version used in self hosted runners"
    required: false
    default: "3.8.8"

  maven-github-username:
    description: "Username for maven github server. E.g. used for using git from maven scm plugin"
    required: false
  maven-github-token:
    description: "Token for maven github server. E.g. used for using git from maven scm plugin"
    required: false
  aws-region:
    description: "Aws region associated with workflow"
    required: false
    default: "eu-west-1"

outputs:
  maven-aws-profile:
    description: "Created aws profile used for accessing maven repositories"
    value: ${{ inputs.maven-aws-profile-name }}

runs:
  using: "composite"
  steps:

    - name: Configure maven aws profile
      shell: bash
      run: |
        aws configure set role_arn ${{ inputs.maven-aws-role-to-assume }} --profile ${{ inputs.maven-aws-profile-name }}
        aws configure set source_profile ${{ inputs.source-aws-profile }} --profile ${{ inputs.maven-aws-profile-name }} 
        aws configure set region ${{ inputs.aws-region }} --profile ${{ inputs.maven-aws-profile-name }}  

    - name: Setup maven artifact repository inputs
      shell: bash
      run: |
        AWS_REGION=${{ inputs.aws-region }}
        echo AWS_REGION="${AWS_REGION}" >> $GITHUB_ENV

        echo MAVEN_AWS_PROFILE="${{ inputs.maven-aws-profile-name }}" >> $GITHUB_ENV

        MAVEN_SNAPSHOT_URL="s3://maven-snapshot-repository-${{ inputs.maven-artifacts-account-id }}"
        MAVEN_RELEASE_URL="s3://maven-release-repository-${{ inputs.maven-artifacts-account-id }}"
        
        echo MAVEN_SNAPSHOT_URL="${MAVEN_SNAPSHOT_URL}" >> $GITHUB_ENV
        echo MAVEN_RELEASE_URL="${MAVEN_RELEASE_URL}" >> $GITHUB_ENV
        
        echo MAVEN_WAGON_PATH="${MAVEN_RELEASE_URL}/${{ inputs.maven-s3-wagon-key }}" >> $GITHUB_ENV
        
        echo DOCKER_REGISTRY="${{ inputs.maven-artifacts-account-id }}.dkr.ecr.${AWS_REGION}.amazonaws.com" >> $GITHUB_ENV
        
        IS_SELF_HOSTED_RUNNER="true"

        if [[ "${{ runner.name }}" =~ ^GitHub\ Actions.* ]]; then
            IS_SELF_HOSTED_RUNNER="false"
        fi
        
        echo IS_SELF_HOSTED_RUNNER="${IS_SELF_HOSTED_RUNNER}" >> $GITHUB_ENV

        echo MAVEN_GITHUB_USERNAME="${{ inputs.maven-github-username }}" >> $GITHUB_ENV
        echo MAVEN_GITHUB_TOKEN="${{ inputs.maven-github-token }}" >> $GITHUB_ENV

    - name: Setup JDK
      uses: actions/setup-java@v3
      with:
        java-version: ${{ inputs.java-version }}
        distribution: corretto
        overwrite-settings: false

    - name: "[SELF_HOSTED] Install Maven"
      if: env.IS_SELF_HOSTED_RUNNER == 'true'
      uses: stCarolas/setup-maven@v4.5  # when changing version of action, verify ext path in runner-specific step
      with:
        maven-version: ${{ inputs.self-hosted-runner-maven-version }}

    - name: Evaluate runner specific information
      id: runner-specific
      shell: bash
      run: |
        if [[ "${{ env.IS_SELF_HOSTED_RUNNER }}" == "false" ]];
          then
            MAVEN_EXT_PATH=/usr/share/apache-maven-*/lib/ext
          else
            MAVEN_EXT_PATH=${RUNNER_TOOL_CACHE}/maven/${{ inputs.self-hosted-runner-maven-version }}/x64/lib/ext
        fi
        echo "maven_ext_path=${MAVEN_EXT_PATH}" >> $GITHUB_OUTPUT

    - name: Download Maven S3 repository extension
      shell: bash
      run: |
        TMP_WAGON_PATH="/tmp/s3-wagon.jar"
        aws s3 cp ${{ env.MAVEN_WAGON_PATH }} $TMP_WAGON_PATH --profile ${{ inputs.maven-aws-profile-name }} 
        
        sudo cp $TMP_WAGON_PATH ${{ steps.runner-specific.outputs.maven_ext_path }}

    - name: Setup Maven settings
      shell: bash
      run: cp ${{ github.action_path }}/settings.xml ${HOME}/.m2/

    - name: Restore Maven cache
      if: inputs.restore-cache == 'true'
      uses: skjolber/maven-cache-github-action@v2.0
      with:
        step: restore
